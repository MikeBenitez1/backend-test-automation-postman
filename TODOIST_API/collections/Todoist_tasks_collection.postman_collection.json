{
	"info": {
		"_postman_id": "b4c4ad3c-165f-4dff-b7c4-b2011f37feb8",
		"name": "Todoist_tasks_collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Positive Tests",
			"item": [
				{
					"name": "Create a new task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 2xx\", function (){",
									"    pm.response.to.be.success;",
									"});",
									"",
									"pm.test(\"Response time is less than 900ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(900);",
									"});",
									"",
									"    var jsonData = pm.response.json();",
									"    var name = pm.environment.get(\"taskName\");",
									"",
									"pm.test(\"Task name is correct\", function () {",
									"    pm.expect(jsonData.name).to.eql(name);",
									"});",
									"",
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"comment_count\": { \"type\": \"number\" },",
									"        \"completed\": { \"type\": \"boolean\" },",
									"        \"content\": { \"type\": \"string\" },",
									"        \"due\": { \"type\": \"object\" },",
									"        \"id\": { \"type\": \"number\" },",
									"        \"order\": { \"type\": \"number\" },",
									"        \"priority\": { \"type\": \"number\" },",
									"        \"project_id\": { \"type\": \"number\" },",
									"        \"section_id\": { \"type\": \"number\" },",
									"        \"parent_id\": { \"type\": \"number\" },",
									"        \"url\": { \"type\": \"string\" },",
									"    }",
									"};",
									"",
									"pm.test(\"Validate JSON schema\", () => {",
									"    pm.response.to.have.jsonSchema(schema);",
									"});",
									"",
									"pm.environment.set(\"taskId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"Buy Milk\", \n    \"due_string\": \"tomorrow at 12:00\", \n    \"due_lang\": \"en\", \n    \"priority\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURLTasks}}",
							"host": [
								"{{baseURLTasks}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get active tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 2xx\", function (){",
									"    pm.response.to.be.success;",
									"});",
									"",
									"pm.test(\"Response time is less than 900ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(900);",
									"});",
									"",
									"    var jsonData = pm.response.json();",
									"    var name = pm.environment.get(\"taskName\");",
									"",
									"pm.test(\"Task name is correct\", function () {",
									"    pm.expect(jsonData.name).to.eql(name);",
									"});",
									"",
									"const schema = {",
									"    \"type\": \"array\",",
									"    \"properties\": {",
									"        \"comment_count\": { \"type\": \"number\" },",
									"        \"completed\": { \"type\": \"boolean\" },",
									"        \"content\": { \"type\": \"string\" },",
									"        \"due\": { \"type\": \"object\" },",
									"        \"id\": { \"type\": \"number\" },",
									"        \"order\": { \"type\": \"number\" },",
									"        \"priority\": { \"type\": \"number\" },",
									"        \"project_id\": { \"type\": \"number\" },",
									"        \"section_id\": { \"type\": \"number\" },",
									"        \"parent_id\": { \"type\": \"number\" },",
									"        \"url\": { \"type\": \"string\" },",
									"    }",
									"};",
									"",
									"pm.test(\"Validate JSON schema\", () => {",
									"    pm.response.to.have.jsonSchema(schema);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURLTasks}}",
							"host": [
								"{{baseURLTasks}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an active task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 2xx\", function (){",
									"    pm.response.to.be.success;",
									"});",
									"",
									"pm.test(\"Response time is less than 900ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(900);",
									"});",
									"",
									"    var jsonData = pm.response.json();",
									"    var name = pm.environment.get(\"taskName\");",
									"    var id = pm.environment.get(\"taskId\");",
									"",
									"",
									"pm.test(\"Task name is correct\", function () {",
									"    pm.expect(jsonData.name).to.eql(name);",
									"});",
									"",
									"pm.test(\"Task Id is correct\", function () {",
									"    pm.expect(jsonData.id).to.eql(id);",
									"});",
									"",
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"comment_count\": { \"type\": \"number\" },",
									"        \"completed\": { \"type\": \"boolean\" },",
									"        \"content\": { \"type\": \"string\" },",
									"        \"due\": { \"type\": \"object\" },",
									"        \"id\": { \"type\": \"number\" },",
									"        \"order\": { \"type\": \"number\" },",
									"        \"priority\": { \"type\": \"number\" },",
									"        \"project_id\": { \"type\": \"number\" },",
									"        \"section_id\": { \"type\": \"number\" },",
									"        \"parent_id\": { \"type\": \"number\" },",
									"        \"url\": { \"type\": \"string\" },",
									"    }",
									"};",
									"",
									"pm.test(\"Validate JSON schema\", () => {",
									"    pm.response.to.have.jsonSchema(schema);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURLTasks}}/{{taskId}}",
							"host": [
								"{{baseURLTasks}}"
							],
							"path": [
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 2xx\", function (){",
									"    pm.response.to.be.success;",
									"});",
									"",
									"pm.test(\"Response time is less than 900ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(900);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"Buy Coffee\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURLTasks}}/{{taskId}}",
							"host": [
								"{{baseURLTasks}}"
							],
							"path": [
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Close a task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 2xx\", function (){",
									"    pm.response.to.be.success;",
									"});",
									"",
									"pm.test(\"Response time is less than 900ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(900);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURLTasks}}/{{taskId}}/close",
							"host": [
								"{{baseURLTasks}}"
							],
							"path": [
								"{{taskId}}",
								"close"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reopen a task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 2xx\", function (){",
									"    pm.response.to.be.success;",
									"});",
									"",
									"pm.test(\"Response time is less than 900ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(900);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURLTasks}}/{{taskId}}/reopen",
							"host": [
								"{{baseURLTasks}}"
							],
							"path": [
								"{{taskId}}",
								"reopen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 2xx\", function (){",
									"    pm.response.to.be.success;",
									"});",
									"",
									"pm.test(\"Response time is less than 900ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(900);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURLTasks}}/{{taskId}}",
							"host": [
								"{{baseURLTasks}}"
							],
							"path": [
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Negative Tests",
			"item": [
				{
					"name": "Create a new task - Empty content",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 4xx\", function (){",
									"    pm.response.to.be.badRequest;",
									"});",
									"",
									"pm.test(\"Empty content response\", function () {",
									"    pm.response.to.have.body(\"Empty content\\n\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"\", \n    \"due_string\": \"tomorrow at 12:00\", \n    \"due_lang\": \"en\", \n    \"priority\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURLTasks}}",
							"host": [
								"{{baseURLTasks}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an active task - Not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 4xx\", function (){",
									"    pm.response.to.be.notFound;",
									"});",
									"",
									"pm.test(\"Not found response\", function () {",
									"    pm.response.to.have.body(\"Not Found\\n\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURLTasks}}/1",
							"host": [
								"{{baseURLTasks}}"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get active tasks - Empty token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 4xx\", function (){",
									"    pm.response.to.be.badRequest;",
									"});",
									"",
									"pm.test(\"Not found response\", function () {",
									"    pm.response.to.have.body(\"Empty token\\n\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURLTasks}}",
							"host": [
								"{{baseURLTasks}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a task - Empty content",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 4xx\", function (){",
									"    pm.response.to.be.badRequest;",
									"});",
									"",
									"pm.test(\"Empty value response\", function () {",
									"    pm.response.to.have.body(\"At least one of supported fields should be set and non-empty\\n\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURLTasks}}/{{taskId}}",
							"host": [
								"{{baseURLTasks}}"
							],
							"path": [
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a task - Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 4xx\", function (){",
									"    pm.response.to.be.badRequest;",
									"});",
									"",
									"pm.test(\"Invalid ID response\", function () {",
									"    pm.response.to.have.body(\"Invalid ID\\n\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURLTasks}}/1",
							"host": [
								"{{baseURLTasks}}"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Close a task - Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 4xx\", function (){",
									"    pm.response.to.be.badRequest;",
									"});",
									"",
									"pm.test(\"Invalid ID response\", function () {",
									"    pm.response.to.have.body(\"Invalid ID\\n\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURLTasks}}/1/close",
							"host": [
								"{{baseURLTasks}}"
							],
							"path": [
								"1",
								"close"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reopen a task - Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 4xx\", function (){",
									"    pm.response.to.be.badRequest;",
									"});",
									"",
									"pm.test(\"Invalid ID response\", function () {",
									"    pm.response.to.have.body(\"Invalid ID\\n\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURLTasks}}/1/reopen",
							"host": [
								"{{baseURLTasks}}"
							],
							"path": [
								"1",
								"reopen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a task - Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 4xx\", function (){",
									"    pm.response.to.be.badRequest;",
									"});",
									"",
									"pm.test(\"Invalid ID response\", function () {",
									"    pm.response.to.have.body(\"Invalid ID\\n\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURLTasks}}/1",
							"host": [
								"{{baseURLTasks}}"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}